{"version":3,"file":"validator.min.js","sources":["../src/validator.js","../src/analyzer.js","../src/index.js","../src/utils.js","../src/rules.js"],"sourcesContent":["import {isArray} from './utils'\r\nimport Rule from './rules'\r\n\r\nfunction Validator (data, constraints) {\r\n  if (!this instanceof Validator){\r\n    throw new Error('Validator is a constructor and should be called with the `new` keyword')\r\n  }\r\n  this.data = data\r\n  this.constraints = constraints\r\n  this.results = null\r\n  this.count = 0\r\n}\r\n\r\nValidator.prototype.validate = function (isOne) {\r\n  var result = {}\r\n  for (let field in this.constraints) {\r\n    let constraint = this.constraints[field]\r\n    result[field] = {}\r\n    var count = 0\r\n    for (let type in constraint) {\r\n      var rule = constraint[type]\r\n      var bool = this.validRule(type, this.data[field], rule)\r\n      count += ~~!bool\r\n      result[field][type] = {val: rule.val, msg: rule.msg, result: bool}\r\n    }\r\n    // console.log(field, count, constraint.required)\r\n    if (count > 0) {\r\n      if (constraint.required && constraint.required.val) {\r\n        this.count++\r\n        if (isOne)\r\n          break\r\n      }\r\n      if (this.data[field] !== undefined) {\r\n        this.count++\r\n        if (isOne)\r\n          break\r\n      }\r\n    }\r\n  }\r\n  this.results = result\r\n  // console.log('验证结果：', result)\r\n  return result\r\n}\r\n\r\nValidator.prototype.validRule = function (type, val, rule) {\r\n  var ruleFun = Rule[type]\r\n  if (!ruleFun) {\r\n    throw new Error('undefined rule type: `'+ type +'`')\r\n  }\r\n  return ruleFun.apply(this.constraints || null, [val, rule.val])\r\n}\r\n\r\nexport default Validator\r\n","// 验证分析\r\nfunction Analyzer (validator) {\r\n\r\n  // console.log(validator)\r\n  var that = this\r\n  this.valider = function () {\r\n    return validator\r\n  }\r\n  this.errors = null\r\n  this.msgs = []\r\n  // 代理\r\n  // return new Proxy(validator.results, {\r\n  //   get (target, key) {\r\n  //     // 优先访问results\r\n  //     if (target[key]) {\r\n  //       return target[key]\r\n  //     } else {\r\n  //       return that[key]\r\n  //     }\r\n  //   }\r\n  // })\r\n}\r\nAnalyzer.prototype.parseMsg = function (msg) {\r\n  return msg\r\n}\r\nAnalyzer.prototype.fails = function () {\r\n  return this.valider().count > 0\r\n}\r\nAnalyzer.prototype.all = function (isArr) {\r\n  if (!this.errors) {\r\n    this.errors = {}\r\n    for (let field in this.valider().results) {\r\n      this.errors[field] = this.get(field)\r\n    }\r\n  }\r\n  if (isArr) {\r\n    var err = []\r\n    for (let field in this.errors) {\r\n      if (this.errors[field].length > 0) {\r\n        for (var i in this.errors[field]) {\r\n          err.push(this.errors[field][i])\r\n        }\r\n      }\r\n    }\r\n    return err\r\n  } else {\r\n    return this.errors\r\n  }\r\n}\r\n\r\nAnalyzer.prototype.get = function (field, isOrign) {\r\n  var result = this.valider().results[field]\r\n  if (!result) {\r\n    console.warn('The field does not exist in constraints')\r\n    return []\r\n  }\r\n  if (isOrign) {\r\n    return result\r\n  }\r\n  // 当需要验证数据不存在此字段并且不必须的字段时，返回[]\r\n  if (this.valider().data[field] === undefined) {\r\n    // 不提供required验证情况\r\n    if (!result.hasOwnProperty('required')) {\r\n      return []\r\n    }\r\n    // 存在required验证情况\r\n    if (result.hasOwnProperty('required') && result.required.result) {\r\n      return []\r\n    }\r\n  }\r\n  var msg = []\r\n  for (let type in result) {\r\n    if (!result[type].result) {\r\n      msg.push(this.parseMsg(result[type].msg))\r\n    }\r\n  }\r\n  return msg\r\n}\r\nAnalyzer.prototype.has = function (field) {\r\n  return this.get(field).length > 0\r\n}\r\nAnalyzer.prototype.first = function (field) {\r\n  if (field) {\r\n    return this.get(field)[0]\r\n  }\r\n  if (!this.errors) {\r\n    this.all()\r\n  }\r\n  for (let field in this.errors) {\r\n    if (this.errors[field].length > 0) {\r\n      return this.errors[field][0]\r\n    }\r\n  }\r\n}\r\nAnalyzer.prototype.last = function (field) {\r\n  var msgs = this.get(field)\r\n  return msgs[msgs.length - 1]\r\n}\r\n\r\nexport default Analyzer\r\n","import {isArray} from './utils'\r\nimport Validator from './validator'\r\nimport Analyzer from './analyzer'\r\nimport Rules from './rules'\r\nfunction formatConstraint (constraints) {\r\n  var constraint = {}\r\n  for (var i in constraints)\r\n  for (var type in constraints[i]) {\r\n    var cr = constraints[i]\r\n    if (type !== 'msg') {\r\n      constraint[type] = {val: cr[type], msg: cr.msg}\r\n    }\r\n  }\r\n  return constraint\r\n}\r\n\r\nvar valid = {\r\n  Validator,\r\n  Rule: Rules,\r\n  validate: function (data, constraints, isOne) {\r\n    var vdata = {}\r\n    for (var key in constraints) {\r\n      vdata[key] = {}\r\n      if (isArray(constraints[key])) {\r\n        vdata[key] = formatConstraint(constraints[key])\r\n      } else if (typeof constraints[key] === 'object') {\r\n        vdata[key] = formatConstraint([constraints[key]])\r\n      }\r\n    }\r\n    // console.log('格式化后：', vdata)\r\n    let valider = new Validator(data, vdata)\r\n    valider.validate(isOne)\r\n    return new Analyzer(valider)\r\n  },\r\n  pushRule: function (type, fun) {\r\n    if (Rules.hasOwnProperty(type)) {\r\n      console.warn('The rule type `' + type + '` is exist')\r\n      return false\r\n    }\r\n    if (typeof fun !== 'function') {\r\n      console.warn('The rule fun must be a function')\r\n      return false\r\n    }\r\n    Rules[type] = fun\r\n    console.log(Rules)\r\n    return true\r\n  }\r\n}\r\nexport default valid\r\n","export const isArray = (val) => {\r\n  return Object.prototype.toString.call(val) === '[object Array]'\r\n}\r\n\r\n/**\r\n* 判断一值是否存在数组里\r\n***/\r\nexport const inArray = (val, arr) => {\r\n  for (let k in arr) {\r\n    if (arr[k] === val) return true\r\n  }\r\n  return false\r\n}\r\n","import {isArray, inArray} from './utils'\r\n\r\nexport default {\r\n  // 规则名 (待验证值, 规则值) {return Boolean}\r\n  required (val, rval) {\r\n    if (rval) {\r\n      return val !== undefined\r\n    }\r\n    return true\r\n  },\r\n  eq (val, rval) {\r\n    return val === rval\r\n  },\r\n  not (val, rval) {\r\n    return val !== rval\r\n  },\r\n  type (val, rval) {\r\n    if (val === null || val === undefined) {\r\n      return val === rval\r\n    }\r\n    // String,Object,Array,Number,Boolean,Date,...包括自定义对象  (除null,undefined)\r\n    return val.constructor === rval\r\n  },\r\n  length (val, rval) {\r\n    if (!isArray(rval)) {\r\n      return !!(val && val.length && (val.length === rval))\r\n    }\r\n    if (typeof val === 'string' || isArray(val)) {\r\n      return val.length >= rval[0] && val.length <= rval[1]\r\n    }\r\n  },\r\n  min (val, rval) {\r\n    return val >= rval\r\n  },\r\n  max (val, rval) {\r\n    return val <= rval\r\n  },\r\n  gt (val, rval) {\r\n    return val > rval\r\n  },\r\n  gte (val, rval) {\r\n    return val >= rval\r\n  },\r\n  lt (val, rval) {\r\n    return val < rval\r\n  },\r\n  lte (val, rval) {\r\n    return val <= rval\r\n  },\r\n  between (val, rval) {\r\n    return rval[0] <= val && val <= rval[1]\r\n  },\r\n  notBetween (val, rval) {\r\n    return val < rval[0] || val > rval[1]\r\n  },\r\n  in (targetVal, ruleVal) {\r\n    if (isArray(ruleVal)) {\r\n      return inArray(targetVal, ruleVal)\r\n    }\r\n    if (typeof ruleVal === 'object') {\r\n      return targetVal in ruleVal\r\n    }\r\n    if (typeof ruleVal === 'string') {\r\n      return ruleVal.indexOf(targetVal) > -1\r\n    }\r\n    return false\r\n  },\r\n  notIn (val, rval) {\r\n    if (isArray(rval)) {\r\n      return !inArray(val, rval)\r\n    }\r\n    if (typeof rval === 'object') {\r\n      return !(val in rval)\r\n    }\r\n    if (typeof rval === 'string') {\r\n      return (rval.indexOf(val) === -1)\r\n    }\r\n    return false\r\n  },\r\n  match (val, regexp) {\r\n    if (typeof val !== 'string') return false\r\n    var reg = new RegExp(regexp)\r\n    return reg.test(val)\r\n  },\r\n  notMatch (val, regexp) {\r\n    if (typeof val !== 'string') return false\r\n    var reg = new RegExp(regexp)\r\n    return !reg.test(val)\r\n  },\r\n  like (val, rval) {\r\n    // like \r\n    //   %abc     /abc$/\r\n    //   abc%     /^abc/\r\n    //   a%bc     /^a.*bc$/\r\n    //   %a%bc    /a.*cb$/\r\n    //   a%bc%    /^a.*bc/\r\n    //   %a%bc%   /a.*bc/\r\n    if (typeof rval !== 'string') return false\r\n    if (rval[0] !== '%') {\r\n      rval = '^' + rval\r\n    }\r\n    if (rval[rval.length - 1] !== '%') {\r\n      rval = rval + '$'\r\n    }\r\n    var regexp = new RegExp(rval.replace(/%/g, '.*'))\r\n    return regexp.test(val)\r\n  },\r\n  notLike (val, rval) {\r\n    if (typeof rval !== 'string') return false\r\n    if (rval[0] !== '%') {\r\n      rval = '^' + rval\r\n    }\r\n    if (rval[rval.length - 1] !== '%') {\r\n      rval = rval + '$'\r\n    }\r\n    var regexp = new RegExp(rval.replace(/%/g, '.*'))\r\n    return !regexp.test(val)\r\n  },\r\n  email (val, rval) {\r\n    var regexp = /^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/\r\n    if (rval) {\r\n      return regexp.test(val)\r\n    }\r\n    return true\r\n  },\r\n  upperCase (val, rval) {\r\n    if (rval) {\r\n      return val === val.toUpperCase()\r\n    }\r\n    return true\r\n  },\r\n  lowerCase (val, rval) {\r\n    if (rval) {\r\n      return val === val.toLowerCase()\r\n    }\r\n    return true\r\n  },\r\n  run (val, rval) {\r\n    if (typeof rval === 'function') {\r\n      return rval(val)\r\n    }\r\n    return true\r\n  }\r\n}\r\n"],"names":["Validator","data","constraints","this","Error","results","count","Analyzer","validator","valider","errors","msgs","formatConstraint","constraint","i","type","cr","val","msg","isArray","Object","prototype","toString","call","inArray","arr","k","rval","undefined","constructor","length","targetVal","ruleVal","indexOf","regexp","RegExp","test","replace","toUpperCase","toLowerCase","validate","isOne","result","field","rule","bool","validRule","required","ruleFun","Rule","apply","parseMsg","fails","all","isArr","get","err","push","isOrign","warn","hasOwnProperty","has","first","last","Rules","vdata","key","babelHelpers.typeof","fun","log"],"mappings":"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"}